name: Integration
on:
  - pull_request
  - push
jobs:
  go:
    name: Go
    runs-on: ubuntu-latest
    services:
      mock:
        image: mockserver/mockserver
        ports:
          - 1080:1080
        env:
          MOCKSERVER_PROPERTY_FILE: /config/mockserver.properties
          MOCKSERVER_INITIALIZATION_JSON_PATH: /config/initializerJson.json
        volumes:
          - ./mockserver:/config
    defaults:
      run:
        working-directory: integration/go
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: Generate
        env:
          TYPE: client-go
          CLIENT_ID: ${{ secrets.SDKGEN_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.SDKGEN_CLIENT_SECRET }}
          NAMESPACE: "main"
        run: cd ../../ && docker-compose up
      - name: Move
        run: mv ../../output/*.go .
      - name: Build
        run: go build -v
      - name: Run
        run: ./main
  java:
    name: Java
    runs-on: ubuntu-latest
    services:
      mock:
        image: mockserver/mockserver
        ports:
          - 1080:1080
        env:
          MOCKSERVER_PROPERTY_FILE: /config/mockserver.properties
          MOCKSERVER_INITIALIZATION_JSON_PATH: /config/initializerJson.json
        volumes:
          - ./../../mockserver:/config
    defaults:
      run:
        working-directory: integration/java
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Debug
        run: docker logs "${{ job.services.mock.id }}"
      - name: PWD
        run: pwd
      - name: Generate
        env:
          TYPE: client-java
          CLIENT_ID: ${{ secrets.SDKGEN_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.SDKGEN_CLIENT_SECRET }}
          NAMESPACE: "org.typeapi.generator"
        run: cd ../../ && docker-compose up
      - name: Move
        run: mv ../../output/*.java .
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots package
      - name: Run
        run: java -jar target/generator-0.1.0-jar-with-dependencies.jar
      - name: Debug
        run: docker logs "${{ job.services.mock.id }}"
  php:
    name: PHP
    runs-on: ubuntu-latest
    services:
      mock:
        image: mockserver/mockserver
        ports:
          - 1080:1080
        env:
          MOCKSERVER_PROPERTY_FILE: /config/mockserver.properties
          MOCKSERVER_INITIALIZATION_JSON_PATH: /config/initializerJson.json
        volumes:
          - ./mockserver:/config
    defaults:
      run:
        working-directory: integration/php
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          coverage: none
      - name: Generate
        env:
          TYPE: client-php
          CLIENT_ID: ${{ secrets.SDKGEN_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.SDKGEN_CLIENT_SECRET }}
          NAMESPACE: "SDK"
        run: cd ../../ && docker-compose up
      - name: Move
        run: mv ../../output/*.php .
      - name: Composer install
        run: composer install --no-interaction --no-ansi --no-progress
      - name: Run
        run: php main.php
